---
title: "Homework 4"
author: "Denis Ostroushko"
format: 
  pdf:
    toc: false
    number-sections: false
    colorlinks: true
editor: source
execute: 
  eval: true
  echo: false
  message: false
  warning: false
---

```{r}
library(tidyverse)
library(kableExtra)
```

# Problem 1



```{R}

fpath <- "https://jaredhuling.org/data/pubh7406/thall_and_vail_1990.dat"

seiz <- read.table(fpath, header=TRUE)

## sum up seizures across visits
seiz_total <- 
  seiz %>%
    group_by(id) %>%
    dplyr::summarize(
      seiz = sum(seiz),
      age = age[1],
      base = base[1],
      log_base = log(base/4),
      treat = treat[1]
      )

```

### (1)


```{r}
f1 <- glm(seiz ~ log(age)+log_base+treat, data = seiz_total, family = poisson())
fq1 <- glm(seiz ~ log(age)+log_base+treat, data = seiz_total, family = quasipoisson())


summary(f1)
summary(fq1)

var_coef_f1 <- diag(vcov(f1))
var_coef_fq1 <- diag(vcov(fq1))

var_coef_f1
var_coef_fq1

var_coef_fq1 / var_coef_f1

```

### (2)

```{r}

N_iter <- 1000

results <- 
  data.frame(
    i = seq(1,N_iter, by = 1), 
    intercept_b = rep(NA, N_iter),
    log_age_b = rep(NA, N_iter), 
    log_base_b = rep(NA, N_iter), 
    treat_b = rep(NA, N_iter)
  )

set.seed(1)

for(i in 1:N_iter){
  
  temp_m <- glm(seiz ~ log(age)+log_base+treat, 
                data = seiz_total[sample(rownames(seiz_total), replace= T), ], 
                family = poisson())
  
  results$intercept_b[i] = coef(temp_m)[1]
  results$log_age_b[i] = coef(temp_m)[2]
  results$log_base_b[i] = coef(temp_m)[3]
  results$treat_b[i] = coef(temp_m)[4]

}


```

### (3)

Bias = average of bootsrap - fitted coefficient 

```{r}
boot_beta <- 
  results %>% 
    summarise(across(.cols = c("intercept_b", "log_age_b", "log_base_b", "treat_b"), .fns = mean))

coef(f1)

# bias

boot_beta - coef(f1)

```
### (4)

```{R}

sampling_dist_plot <- 
  function(res_data, variable){
         
      pretty_name <- 
        case_when(
          variable == 'log_age_b' ~ "Log( Age )", 
          variable == 'log_base_b' ~ "Log( Baseline Seizures )", 
          variable == 'treat_b' ~ "Treatment", 
          variable == 'log_age_log_base_int_b' ~ "Log(Age):Log(Base. Seizures) Interaction",
          variable == 'log_age_treat_int_b' ~ "Log(Age):Treatment Interaction",
          variable == 'log_base_treat_b' ~ "Log(Base. Seizures):Treatment Interaction",
          variable == 'log_age_log_base_treat_int_b' ~ "Three-way Interaction"
        )
    
      ggplot(data = res_data, 
             aes_string(x = variable)) + 
        geom_histogram(
          aes(y =..density..),
          bins = 20 , 
          fill = "grey", 
          color = "black"
        ) + 
      
      stat_function(fun = dnorm, args = list(mean = mean(res_data[,variable]), 
                                             sd = sd(res_data[,variable])), 
                    aes(color = "Normal Distribution \nwith Mean and Variance \nfrom Observed Data"), 
                    size = 1
                    ) + 
      theme_minimal() + 
      
      scale_color_discrete(name = "") + 
      
      ylab("") + 
      xlab(
        paste0("Sampling Distribtuion of ", pretty_name, " coefficient")
        )
  }

```



```{r}

# normal approximation C.I. 

normal_approx <- 
  function(coef, boot_se, rounding = 5){
    
    vec = c(
      round(coef - qt(p = 0.975, df = nrow(seiz_total) - 1) * boot_se , rounding),
      round(coef + qt(p = 0.975, df = nrow(seiz_total) - 1) * boot_se , rounding)
    )
    
   names(vec) <- c("2.5%", "97.5%")
    
   return(vec)
  }

```


**Log (Age)**

```{r}
#| fig-cap: "Sampling Distribution of Log(Age) regression coefficient" 
#| label: fig-log-age
#| fig-width: 8
sampling_dist_plot(res_data = results, variable = 'log_age_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(f1)[2], boot_se = sd(results$log_age_b))
```

2. Percentile Method

```{r}
quantile(results$log_age_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(fq1)[2,]
```

**Log (Baseline Seizures)**

```{r}
#| fig-cap: "Sampling Distribution of Log(Baseline Seizures) regression coefficient" 
#| label: fig-log-seiz
#| fig-width: 8
sampling_dist_plot(res_data = results, variable = 'log_base_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(f1)[3], boot_se = sd(results$log_base_b))
```

2. Percentile Method

```{r}
quantile(results$log_base_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(fq1)[3,]
```

**Treatment**

```{r}
#| fig-cap: "Sampling Distribution of Treatment regression coefficient" 
#| label: fig-treat
#| fig-width: 8
sampling_dist_plot(res_data = results, variable = 'treat_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(f1)[4], boot_se = sd(results$treat_b))
```

2. Percentile Method

```{r}
quantile(results$treat_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(fq1)[4,]
```

### (5)

```{r}

int_model <- glm(seiz ~ log(age)*log_base*treat, data = seiz_total, family = poisson())
quasi_int_model <- glm(seiz ~ log(age)*log_base*treat, data = seiz_total, family = quasipoisson())

```


```{r}

results_int <- 
  data.frame(
    i = seq(1,N_iter, by = 1), 
    intercept_b = rep(NA, N_iter),
    log_age_b = rep(NA, N_iter), 
    log_base_b = rep(NA, N_iter), 
    treat_b = rep(NA, N_iter),
    log_age_log_base_int_b = rep(NA, N_iter),
    log_age_treat_int_b = rep(NA, N_iter), 
    log_base_treat_b = rep(NA, N_iter), 
    log_age_log_base_treat_int_b = rep(NA, N_iter)
    
  )

set.seed(1)

for(i in 1:N_iter){
  
  temp_m <- glm(seiz ~log(age)*log_base*treat, 
                data = seiz_total[sample(rownames(seiz_total), replace= T), ], 
                family = poisson())
  
  results_int$intercept_b[i] = coef(temp_m)[1]
  results_int$log_age_b[i] = coef(temp_m)[2]
  results_int$log_base_b[i] = coef(temp_m)[3]
  results_int$treat_b[i] = coef(temp_m)[4]
  results_int$log_age_log_base_int_b[i] = coef(temp_m)[5]
  results_int$log_age_treat_int_b[i] = coef(temp_m)[6]
  results_int$log_base_treat_b[i] = coef(temp_m)[7]
  results_int$log_age_log_base_treat_int_b[i] = coef(temp_m)[8]

}


```

**Comparison with simpler additive model** 

```{R}
#| label: tbl-coef-comp
#| tbl-cap: "Comparion of fitted and boostrapped model parameters"
#| 
###################
# coefficients and standard errors from bootsrap from the interative model 

int_model_coef <- 
  
  results_int %>% 
    summarize(
      across(
        .cols = c('log_age_b', 'log_base_b', 'treat_b', 
                  'log_age_log_base_int_b', 'log_age_treat_int_b', 
                  "log_base_treat_b",'log_age_log_base_treat_int_b'), 
        .fns = list(mean, sd)
    )) 

mean_int <- int_model_coef[seq(from = 1, to = (length(int_model_coef)-1), by = 2)]
var_names <- names(mean_int)
names(mean_int) <- NULL

sd_int <- int_model_coef[seq(from = 2, to = (length(int_model_coef)), by = 2)]
names(sd_int) <- NULL

int_model_coef_f <- 
  data.frame(
    names = var_names, 
    int_mean = t(mean_int) , 
    int_sd = t(sd_int)
  )


####################
# coefficients and standard errors from boostrapp from the additive model 


add_model_coef <- 
  
  results %>% 
    summarize(
      across(
        .cols = c('log_age_b', 'log_base_b', 'treat_b'), 
        .fns = list(mean, sd)
    )) 

mean_add <- add_model_coef[c(1,3,5)]
var_names <- names(mean_add)
names(mean_add) <- NULL

sd_add <- add_model_coef[c(2,4,6)]
names(sd_add) <- NULL

add_model_coef_f <- 
  data.frame(
    names = var_names, 
    add_mean = t(mean_add) , 
    add_sd = t(sd_add)
  )

coef_from_two_model <- 
  int_model_coef_f %>% 
  left_join(
    add_model_coef_f, 
    by = "names", 
    all = T
  ) %>% 
  
  mutate(
    pretty_names = c("Log(Age)", "Log(Baseline Seizures)", "Treatment", "Log(Age):Log(Baseline Seizures)", 
                     "Log(Age):Treatment", "Log(Baseline Seizures_:Treatment",
                     "Log(Age):Log(Baseline Seizures):Treatment")
  ) %>% 
  
  select(-names) 

coef_from_two_model$fitted_vals <- coef(int_model)[-1]
coef_from_two_model$fitted_se <- coefficients(summary(int_model))[-1,2]


coef_from_two_model$fitted_vals_q <- coef(quasi_int_model)[-1]
coef_from_two_model$fitted_se_q <- coefficients(summary(quasi_int_model))[-1,2]

coef_from_two_model <- 
  coef_from_two_model %>% 
  select(
    pretty_names, 
    
    fitted_vals, fitted_se,
    
    fitted_vals_q, fitted_se_q, 
    
    int_mean, int_sd, 
    
    add_mean, add_sd
    
  )

coef_from_two_model %>% 
  
  kable(booktabs = T, 
    #    caption = "Comparion of fitted and boostrapped model parameters", 
        linesep = "\\addlinespace", 
        align = c('l', rep('c', (length(coef_from_two_model)-1))), 
        digits = 2, 
        col.names = c("Model Terms",  
                      "Beta", "SE", 
                      "Beta", "SE", 
                      "Avg. Beta", "SE",
                      "Avg. Beta", "SE"
                      )) %>% 
  kable_styling(latex_options = c("condenced", "striped", "hold_position"), 
                full_width = F) %>% 
  column_spec(2:length(coef_from_two_model), width = "1cm") %>%
  column_spec(1, width = "4cm") %>% 
  add_header_above(c(" " = 1,
                     "Poisson \nFitted Values" = 2, 
                     "Quasipoisson \nFitted Values" = 2, 
                     "Bootsrapp Model \nwith Interaction" = 2, 
                     "Boostrapp \nSimple Model" = 2
                     ))


```


**Log (Age)**

```{r}
#| fig-cap: "Sampling Distribution of Log(Age) regression coefficient from a model with interaction terms" 
#| label: fig-log-age-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_age_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[2], boot_se = sd(results_int$log_age_b))
```

2. Percentile Method

```{r}
quantile(results_int$log_age_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[2,]
```

**Log (Baseline Seizures)**

```{r}
#| fig-cap: "Sampling Distribution of Log(Base) regression coefficient from a model with interaction terms" 
#| label: fig-log-base-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_base_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[3], boot_se = sd(results_int$log_base_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$log_base_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[3,]
```

**Treatment**

```{r}
#| fig-cap: "Sampling Distribution of Treatment regression coefficient from a model with interaction terms" 
#| label: fig-treat-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'treat_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[4], boot_se = sd(results_int$treat_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$treat_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[4,]
```

**Log(Age) - Log(Baseline Seizures) Interaction Term**

```{r}
#| fig-cap: "Sampling Distribution of respective interactive term regression coefficient" 
#| label: fig-age-base-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_age_log_base_int_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[5], boot_se = sd(results_int$log_age_log_base_int_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$log_age_log_base_int_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[5,]
```

**Treatment - Log(Age) Interaction Term**

```{r}
#| fig-cap: "Sampling Distribution of respective interactive term regression coefficient" 
#| label: fig-treat-age-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_age_treat_int_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[6], boot_se = sd(results_int$log_age_treat_int_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$log_age_treat_int_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[6,]
```

**Treatment - Log(Baseline Seizures) Interaction Term**

```{r}
#| fig-cap: "Sampling Distribution of respective interactive term regression coefficient" 
#| label: fig-treat-base-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_base_treat_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[7], boot_se = sd(results_int$log_base_treat_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$log_base_treat_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[7,]
```

**Three-variable Interaction Term**

```{r}
#| fig-cap: "Sampling Distribution of a three-variable interaction term regression coefficient" 
#| label: fig-threesome-int
#| fig-width: 8
sampling_dist_plot(res_data = results_int, variable = 'log_age_log_base_treat_int_b')
```

1. Normal Approximation Method

```{r}
normal_approx(coef = coef(int_model)[8], boot_se = sd(results_int$log_age_log_base_treat_int_b))
```

2. Percentile Method C.I. 

```{r}
quantile(results_int$log_age_log_base_treat_int_b, p = c(0.025, 0.975))
```

3. Comparison with Quasipoisson

```{r}
confint(quasi_int_model)[8,]
```

# Problem 2
